{"version":3,"sources":["Api.js","redux/PhoneBook/operation.js","redux/PhoneBook/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactList.styled.jsx","components/ContactsList/ContactList.jsx","components/Filter/Filter.styled.jsx","redux/PhoneBook/actions.js","components/Filter/Filter.jsx","components/App/App.styled.js","components/App/App.js","redux/PhoneBook/reducers.js","redux/store.js","index.js"],"names":["fetchAllContacts","a","axios","get","response","postContact","name","number","method","url","data","deleteContactById","id","defaults","baseURL","fetchContacts","createAsyncThunk","_","rejectWithValue","contacts","message","addNewContact","userObj","deleteContact","contactId","state","items","filter","visibleContacts","getFilter","getContacts","contact","toLowerCase","includes","Form","styled","form","Label","label","Input","input","Button","button","ContactForm","useState","setName","setNumber","stateContacts","useSelector","dispatch","useDispatch","handleChange","e","target","value","newContact","contactToAdd","some","toast","notify","action","onSubmit","preventDefault","htmlFor","onChange","type","pattern","title","required","position","toastOptions","duration","style","background","color","List","ul","ListItem","li","ContactList","filteredContacts","useEffect","map","onClick","Wrapper","div","getFilterName","createAction","Filter","formFilter","PrimaryTitle","h1","SecondaryTitle","h2","App","itemReducer","createReducer","fulfilled","payload","filterReducer","isLoading","pending","rejected","contactsReducer","combineReducers","rootReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8d192c6.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://61d963d4ce86530017e3cad4.mockapi.io\";\r\nexport async function fetchAllContacts() {\r\n  const response = await axios.get(\"/contacts\");\r\n  return response;\r\n}\r\n\r\nexport async function postContact({ name, number }) {\r\n  return await axios({\r\n    method: \"post\",\r\n    url: \"/contacts\",\r\n    data: {\r\n      name,\r\n      number,\r\n    },\r\n  });\r\n}\r\n\r\nexport async function deleteContactById(id) {\r\n  return await axios({\r\n    method: \"delete\",\r\n    url: `/contacts/${id}`,\r\n  });\r\n}\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { fetchAllContacts, postContact, deleteContactById } from \"../../Api\";\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await fetchAllContacts();\r\n      return contacts.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const addNewContact = createAsyncThunk(\r\n  \"contacts/postContact\",\r\n  async (userObj, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await postContact(userObj);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  \"contacts/deleteContact\",\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      await deleteContactById(contactId);\r\n      return contactId;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n","export const contacts = (state) => state.contacts.items;\nexport const filter = (state) => state.contacts.filter;\n\nexport const getFilter = (state) => state.contacts.filter;\nexport const getContacts = (state) => state.contacts.items;\n\nexport const visibleContacts = (state) => {\n  const filter = getFilter(state);\n  const contacts = getContacts(state);\n  if (filter !== \"\") {\n    if (contacts !== []) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter)\n      );\n    }\n  } else {\n    return contacts;\n  }\n};\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  margin-left: 70px;\n  padding: 10px 200px 10px 10px;\n  border: 2px solid black;\n`;\n\nexport const Label = styled.label`\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const Input = styled.input`\n  padding: 3px;\n  margin-top: 5px;\n  margin-bottom: 15px;\n  &:hover {\n    border-color: blue;\n  }\n`;\n\nexport const Button = styled.button`\n  width: fit-content;\n  padding: 4px;\n  margin-top: 8px;\n  font-size: 14px;\n  border: 1px solid grey;\n  border-radius: 5px;\n  background-color: #fff;\n  &:hover {\n    cursor: pointer;\n    background-color: blue;\n    border-color: blue;\n  }\n`;\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { addNewContact } from \"../../redux/PhoneBook/operation\";\nimport { contacts } from \"../../redux/PhoneBook/selectors\";\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const stateContacts = useSelector(contacts);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    newContact();\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const notify = (name) => toast(`${name} is already in contacts`);\n\n  const newContact = () => {\n    const contactToAdd = {\n      name,\n      number,\n    };\n\n    stateContacts.some(\n      (contact) =>\n        contact.name.toLowerCase() === contactToAdd.name.toLowerCase()\n    )\n      ? notify(contactToAdd.name)\n      : dispatch(addNewContact(contactToAdd));\n  };\n\n  return (\n    <>\n      <Form action=\"\" onSubmit={handleSubmit}>\n        <Label htmlFor=\"name\">Name</Label>\n        <Input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <Label htmlFor=\"number\">Number</Label>\n        <Input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n      <Toaster\n        position=\"top-center\"\n        toastOptions={{\n          duration: 3000,\n          style: {\n            background: \"#f8cd98\",\n            color: \"#000\",\n          },\n        }}\n      />\n    </>\n  );\n}\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  margin-left: 70px;\n`;\n\nexport const ListItem = styled.li`\n  margin-top: 10px;\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  padding: 3px 6px;\n  margin-left: 10px;\n  font-size: 12px;\n  background-color: #fff;\n  border: 1px solid grey;\n  border-radius: 5px;\n  &:hover {\n    cursor: pointer;\n    background-color: blue;\n    border-color: blue;\n  }\n`;\n","import { List, ListItem, Button } from \"./ContactList.styled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport {\n  fetchContacts,\n  deleteContact,\n} from \"../../redux/PhoneBook/operation.js\";\nimport { visibleContacts } from \"../../redux/PhoneBook/selectors\";\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(visibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <List>\n        {filteredContacts.map((contact) => {\n          const { id, name, number } = contact;\n          return (\n            <ListItem key={id}>\n              {name} - {number}\n              <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n                Delete\n              </Button>\n            </ListItem>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  margin-left: 70px;\n`;\n\nexport const Input = styled.input`\n  padding: 3px;\n  margin-top: 5px;\n  &:hover {\n    border-color: blue;\n  }\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n`;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const getFilterName = createAction(\"contact/filterContacts\");\n","import { Wrapper, Input, Label } from \"./Filter.styled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilterName } from \"../../redux/PhoneBook/actions\";\nimport { filter } from \"../../redux/PhoneBook/selectors\";\n\nconst Filter = () => {\n  const formFilter = useSelector(filter);\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      <Label htmlFor=\"filter\">Find contacts by name</Label>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={formFilter}\n        onChange={(e) => dispatch(getFilterName(e.target.value.toLowerCase()))}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Filter;\n","import styled from \"@emotion/styled\";\n\nexport const PrimaryTitle = styled.h1`\n  margin-left: 70px;\n`;\n\nexport const SecondaryTitle = styled.h2`\n  margin-left: 70px;\n`;\n","import ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactsList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport { PrimaryTitle, SecondaryTitle } from \"./App.styled\";\nimport { Toaster } from \"react-hot-toast\";\n\nfunction App() {\n  return (\n    <>\n      <Toaster\n        position=\"top-center\"\n        toastOptions={{\n          duration: 3000,\n          style: {\n            background: \"red\",\n            color: \"#000\",\n          },\n        }}\n      />\n      <PrimaryTitle>Phonebook</PrimaryTitle>\n      <ContactForm />\n      <SecondaryTitle>Contacts</SecondaryTitle>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { getFilterName } from \"./actions\";\nimport { fetchContacts, addNewContact, deleteContact } from \"./operation\";\n\nconst itemReducer = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [addNewContact.fulfilled]: (state, action) => [action.payload, ...state],\n  [deleteContact.fulfilled]: (state, action) => {\n    return state.filter((contact) => {\n      return contact.id !== action.payload;\n    });\n  },\n});\nconst filterReducer = createReducer(\"\", {\n  [getFilterName]: (state, action) => (state = action.payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemReducer,\n  filter: filterReducer,\n  isLoading,\n});\n\nexport default contactsReducer;\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./PhoneBook/reducers\";\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport { store };\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App/App\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}